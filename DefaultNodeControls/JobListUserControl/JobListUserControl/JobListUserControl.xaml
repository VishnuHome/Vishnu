<vm:DynamicUserControlBase x:Class="Vishnu.UserControls.JobListUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:base="clr-namespace:Vishnu.Interchange;assembly=Vishnu.Interchange"
             xmlns:ctrl="clr-namespace:NetEti.CustomControls;assembly=NetEti.CustomProgressBar"
             xmlns:convert="clr-namespace:Vishnu.WPF_UI.ValueConverter;assembly=Vishnu.WPF_UI"
             xmlns:vm="clr-namespace:Vishnu.ViewModel;assembly=Vishnu.ViewModel"
             xmlns:attached="clr-namespace:Vishnu.WPF_UI.DependencyProperties;assembly=Vishnu.WPF_UI"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             mc:Ignorable="d" 
             x:Name="JobListUserControlXaml"
             d:DesignHeight="300" d:DesignWidth="300">
    <vm:DynamicUserControlBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Vishnu.WPF_UI;component/Assets/LogicalTaskTreeControlStaticResourceDictionary.xaml" />
                <ResourceDictionary Source="/Vishnu.WPF_UI;component/Assets/LogicalTaskTreeControlResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <convert:NullableBoolToBrush x:Key="nullableBoolToBrush" />
            <convert:ChildOrientationToExpandDirection x:Key="childOrientationToExpandDirection" />
            <convert:VisualNodeWorkerStateToText x:Key="workersStateToText" />
            <convert:VisualNodeStateToBitmapImage x:Key="visualNodeStateToBitmapImage" />
            <convert:NotEmptyToTrue x:Key="notEmptyToTrue" />
            <convert:OrientationModifier x:Key="orientationModifier" />
            <x:Code>
                <![CDATA[
                                    private void ItemBorder_MouseDown(object sender, MouseButtonEventArgs e)
                                    {
                                        Console.WriteLine("border1_MouseDown");
                                        e.Handled = true; // Console.WriteLine("border1_MouseDown: setting e.Handled to true.");
                                    }
                                ]]>
            </x:Code>
            <DataTemplate DataType="{x:Type vm:JobListViewModel}">
                <Border Name="ItemBorder" HorizontalAlignment="Stretch" Padding="5" Background="Transparent" BorderThickness="3" BorderBrush="Transparent"
                        CornerRadius="6" MouseDown="ItemBorder_MouseDown" Visibility="{Binding Visibility}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter">
                            <i:InvokeCommandAction Command="{Binding RefreshCanExecuteCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid Name="MainGrid" HorizontalAlignment="Stretch" ToolTip="{StaticResource cmToolTip}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Name="NameText" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Text="{Binding Name}" Padding="2" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Center"/>
                        <Grid Name="PBarGrid" Grid.Row="0" Grid.Column="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <ctrl:CustomProgressBar Grid.Column="0" Name="cpBar" Value="{Binding Path=Progress}" Text="{Binding Path=ProgressText}"
                                                    IsGlowing="False" Height="22" Width="60" Padding="5">
                                <ctrl:CustomProgressBar.Foreground>
                                    <MultiBinding Converter="{StaticResource nullableBoolToBrush, diag:PresentationTraceSources.TraceLevel=High}">
                                        <Binding Path="Logical" />
                                        <Binding RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </ctrl:CustomProgressBar.Foreground>
                            </ctrl:CustomProgressBar>
                            <Grid x:Name="ToggleButtonBorderLogicalChild" Margin="4,7,4,7" Grid.Row="0" Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Name="btnRunLogicalTaskTree" Grid.Column="0" Visibility="Hidden"
                                         Padding="5,0,5,0" Width="34"
                                    Command="{Binding RunLogicalTaskTree, diag:PresentationTraceSources.TraceLevel=High}"
                                    FontSize="8">
                                    <Button.Content>
                                        <Binding Path="ButtonRunText" />
                                    </Button.Content>
                                </Button>
                                <Button Name="btnBreakLogicalTaskTree" Grid.Column="1" Visibility="Hidden"
                                        Padding="5,0,5,0"
                                    Command="{Binding BreakLogicalTaskTree, diag:PresentationTraceSources.TraceLevel=High}"
                                    FontSize="8">
                                    <Button.Content>
                                        <Binding Path="ButtonBreakText" />
                                    </Button.Content>
                                </Button>
                            </Grid>
                        </Grid>
                        <Ellipse Name="ColorRing" Grid.Row="0" Grid.Column="3" Margin="3"
                                 Width="{StaticResource ColorRing.Width}"
                                 Height="{StaticResource ColorRing.Width}">
                            <Ellipse.Fill>
                                <MultiBinding Converter="{StaticResource nullableBoolToBrush, diag:PresentationTraceSources.TraceLevel=High}">
                                    <Binding Path="Logical" />
                                    <Binding RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Name="ColorPoint" Grid.Row="0" Grid.Column="3" Margin="3"
                                 Width="{StaticResource ColorPoint.Width}"
                                 Height="{StaticResource ColorPoint.Width}">
                            <Ellipse.Fill>
                                <MultiBinding Converter="{StaticResource nullableBoolToBrush, diag:PresentationTraceSources.TraceLevel=High}">
                                    <Binding Path="LastNotNullLogical" />
                                    <Binding RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Ellipse.Fill>
                        </Ellipse>
                        <TextBlock Name="IdText" Grid.Row="0" Grid.Column="4" Text="{Binding Id}" Padding="2" VerticalAlignment="Center" TextAlignment="Center"/>
                        <TextBlock Name="WorkersStateBlock" Grid.Row="0" Grid.Column="5" FontSize="8" Margin="3,-2,0,0">
                            <TextBlock.Text>
                                <Binding Path="WorkersState" Converter="{StaticResource workersStateToText}" />
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Name="NodeStateImage" Grid.Row="0" Grid.Column="5" Margin="7,0,0,0" Height="14" Width="14">
                            <Image.Source>
                                <MultiBinding Converter="{StaticResource visualNodeStateToBitmapImage, diag:PresentationTraceSources.TraceLevel=High}">
                                    <Binding Path="VisualState" />
                                    <Binding Source="{StaticResource BitmapImageDictionary}" />
                                </MultiBinding>
                            </Image.Source>
                        </Image>
                        <Button Name="TreeShifter" Grid.Row="0" Grid.Column="7" Margin="5,0,0,0" Visibility="Collapsed"
                                HorizontalAlignment="Right"
                                Command="{Binding SwitchTaskTreeView, diag:PresentationTraceSources.TraceLevel=High}">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Image Name="TurnTreeImage" Height="14" Width="14" Source="Media\yin_yang.png" />
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                            <Setter TargetName="TurnTreeImage"
                                                    Property="Height"
                                                    Value="17" />
                                            <Setter TargetName="TurnTreeImage"
                                                    Property="Width"
                                                    Value="17" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <TextBlock Name="DebugNodeInfos" Grid.Row="1" Grid.Column="1"  Grid.ColumnSpan="7"
                                   Text="{Binding DebugNodeInfos}" Visibility="Collapsed" />
                        <TextBlock Name="ShortResultText" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="7"
                                   Text="{Binding ShortResult, StringFormat=Ergebnis: {0}}"
                                   Visibility="Collapsed" />
                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding DebugMode}" Value="True">
                        <!-- Setter TargetName="ShortResultText" Property="Visibility" Value="Visible" /-->
                        <Setter TargetName="NameText" Property="Visibility" Value="collapsed" />
                        <Setter TargetName="DebugNodeInfos" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                            <Condition Binding="{Binding IsSnapshotDummy}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter
                                                    TargetName="btnRunLogicalTaskTree"
                                                    Property="Visibility"                     
                                                    Value="visible" />
                        <Setter
                                                    TargetName="btnBreakLogicalTaskTree"
                                                    Property="Visibility"                     
                                                    Value="visible" />
                    </MultiDataTrigger>
                    <DataTrigger Binding="{Binding HasParent}" Value="False">
                        <Setter TargetName="TreeShifter" Property="Visibility" Value="Visible" />
                        <Setter TargetName="TreeShifter" Property="Width" Value="17" />
                        <Setter TargetName="TreeShifter" Property="Height" Value="17" />
                    </DataTrigger>
                    <DataTrigger>
                        <DataTrigger.Binding>
                            <MultiBinding Converter="{StaticResource orientationModifier, diag:PresentationTraceSources.TraceLevel=High}">
                                <Binding Path="ChildOrientation" />
                                <Binding RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </DataTrigger.Binding>
                        <DataTrigger.Value>Vertical</DataTrigger.Value>
                        <Setter TargetName="PBarGrid" Property="Grid.Row" Value="2" />
                        <Setter TargetName="PBarGrid" Property="Grid.Column" Value="2" />
                        <Setter TargetName="PBarGrid" Property="Margin" Value="0,10,0,0" />
                        <Setter TargetName="PBarGrid" Property="VerticalAlignment" Value="Bottom" />
                        <Setter TargetName="PBarGrid" Property="LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="-90" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="ColorRing" Property="Grid.Row" Value="3" />
                        <Setter TargetName="ColorRing" Property="Grid.Column" Value="2" />
                        <Setter TargetName="ColorRing" Property="VerticalAlignment" Value="Top" />
                        <Setter TargetName="ColorPoint" Property="Grid.Row" Value="3" />
                        <Setter TargetName="ColorPoint" Property="Grid.Column" Value="2" />
                        <Setter TargetName="ColorPoint" Property="VerticalAlignment" Value="Top" />
                        <Setter TargetName="NameText" Property="Grid.Row" Value="0" />
                        <Setter TargetName="NameText" Property="Grid.Column" Value="0" />
                        <Setter TargetName="NameText" Property="Grid.ColumnSpan" Value="3" />
                        <Setter TargetName="NameText" Property="HorizontalAlignment" Value="Center" />
                        <Setter TargetName="IdText" Property="Grid.RowSpan" Value="2"/>
                        <Setter TargetName="IdText" Property="Grid.Row" Value="2"/>
                        <Setter TargetName="IdText" Property="Grid.Column" Value="1" />
                        <Setter TargetName="IdText" Property="Margin" Value="0,10,0,0" />
                        <Setter TargetName="IdText" Property="LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="-90" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="ShortResultText" Property="Grid.Row" Value="2" />
                        <Setter TargetName="ShortResultText" Property="Grid.RowSpan" Value="2" />
                        <Setter TargetName="ShortResultText" Property="Grid.Column" Value="3" />
                        <Setter TargetName="ShortResultText" Property="LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="-90" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="DebugNodeInfos" Property="Grid.Row" Value="2" />
                        <Setter TargetName="DebugNodeInfos" Property="Grid.RowSpan" Value="2" />
                        <Setter TargetName="DebugNodeInfos" Property="Grid.Column" Value="3" />
                        <Setter TargetName="DebugNodeInfos" Property="LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="-90" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="NodeStateImage" Property="Grid.Row" Value="1" />
                        <Setter TargetName="NodeStateImage" Property="Grid.Column" Value="2" />
                        <Setter TargetName="NodeStateImage" Property="VerticalAlignment" Value="Bottom" />
                        <Setter TargetName="NodeStateImage" Property="Margin" Value="0,15,0,0" />
                        <Setter TargetName="WorkersStateBlock" Property="Grid.Row" Value="0" />
                        <Setter TargetName="WorkersStateBlock" Property="Grid.Column" Value="2" />
                        <Setter TargetName="WorkersStateBlock" Property="HorizontalAlignment" Value="Right" />
                        <Setter TargetName="WorkersStateBlock" Property="Margin" Value="3,-2,0,0" />
                        <Setter TargetName="TreeShifter" Property="Grid.Column" Value="3" />
                        <Setter TargetName="TreeShifter" Property="Grid.ColumnSpan" Value="6" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsSnapshotDummy}" Value="true">
                        <Setter TargetName="cpBar" Property="Value" Value="100" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </vm:DynamicUserControlBase.Resources>
    <ContentControl x:Name="MainContentPresenter" Content="{Binding}" />
</vm:DynamicUserControlBase>
